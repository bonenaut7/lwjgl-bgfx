name: LWJGL Release Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64] #[x86, x64]
        include:
#          - ARCH: x86
#            MSVC_ARCH: amd64_x86
#            PLATFORM: x32
#            BUILD: Win32
#            OUTPUT_DIR: win32_vs2022
          - ARCH: x64
            MSVC_ARCH: amd64
            PLATFORM: x64
            BUILD: x64
            OUTPUT_DIR: win64_vs2022
#          - ARCH: arm64
#            MSVC_ARCH: amd64_arm64
#            PLATFORM: arm64
#            BUILD: arm64
#            OUTPUT_DIR: win64_vs2022
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.MSVC_ARCH }}
      - name: Clone bx & bimg
        run: |
          git clone https://github.com/LWJGL-CI/bx.git ../bx
          git clone https://github.com/LWJGL-CI/bimg.git ../bimg
      - name: Configure build
        run: ..\bx\tools\bin\windows\genie --with-shared-lib --with-tools vs2022 --platform ${{matrix.PLATFORM}}
      - name: Try to set debug variable
        run: |
          set CL=/DBX_CONFIG_DEBUG=1
      - name: Switch to ClangCL for x64 build
        run: |
          (Get-Content .build/projects/vs2022/bgfx-shared-lib.vcxproj) -replace 'v143', 'ClangCL' | Out-File -encoding UTF8 .build/projects/vs2022/bgfx-shared-lib.vcxproj
#          (Get-Content .build/projects/vs2022/geometryc.vcxproj) -replace 'v143', 'ClangCL' | Out-File -encoding UTF8 .build/projects/vs2022/geometryc.vcxproj
#          (Get-Content .build/projects/vs2022/texturec.vcxproj) -replace 'v143', 'ClangCL' | Out-File -encoding UTF8 .build/projects/vs2022/texturec.vcxproj
#          (Get-Content .build/projects/vs2022/texturev.vcxproj) -replace 'v143', 'ClangCL' | Out-File -encoding UTF8 .build/projects/vs2022/texturev.vcxproj
#          (Get-Content .build/projects/vs2022/shaderc.vcxproj) -replace 'v143', 'ClangCL' | Out-File -encoding UTF8 .build/projects/vs2022/shaderc.vcxproj
        shell: pwsh
        if: ${{ matrix.ARCH == 'x64' }}
      - name: Build bgfx
        run: devenv .build\projects\vs2022\bgfx.sln /Project bgfx-shared-lib /Build "Debug|${{matrix.BUILD}}"
#      - name: Build geometryc
#         run: devenv .build\projects\vs2022\bgfx.sln /Project geometryc /Build "Release|${{matrix.BUILD}}"
#       - name: Build texturec
#         run: devenv .build\projects\vs2022\bgfx.sln /Project texturec /Build "Release|${{matrix.BUILD}}"
#       - name: Build texturev
#         run: devenv .build\projects\vs2022\bgfx.sln /Project texturev /Build "Release|${{matrix.BUILD}}"
#       - name: Build shaderc
#         run: devenv .build\projects\vs2022\bgfx.sln /Project "shaderc (tools\shaderc\shaderc)" /Build "Release|${{matrix.BUILD}}"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            .build/${{matrix.OUTPUT_DIR}}/bin/bgfx-shared-libRelease.dll
            .build/${{matrix.OUTPUT_DIR}}/bin/bgfx-shared-libDebug.dll
#            .build/${{matrix.OUTPUT_DIR}}/bin/geometrycRelease.exe
#            .build/${{matrix.OUTPUT_DIR}}/bin/texturecRelease.exe
#            .build/${{matrix.OUTPUT_DIR}}/bin/texturevRelease.exe
#            .build/${{matrix.OUTPUT_DIR}}/bin/shadercRelease.exe